{"version":3,"sources":["store/actions/bellotero.js","store/actions/actions.js","components/navbar/componet.nav.js","components/Hoc/hoc.js","errors/error.js","views/Testimonial/view.testimonial.js","views/Configurator/view.configurator.js","containers/Container.js","App.js","serviceWorker.js","store/reducer/reducer.js","index.js"],"names":["connectionFail","type","setNavItems","navItems","newItems","connect","state","dispatch","getNavItems","jsonData","Axios","get","then","res","status","data","menu","items","length","forEach","val","active","catch","error","setActiveNav","text","linkName","props","React","useEffect","className","href","src","alt","map","nav","index","key","to","route","onClick","Hoc","children","ErrorPage","style","display","textAlign","paddingTop","fontSize","fontWeight","color","pageData","page_one","getData","pageContent","useState","contentData","setContentData","reviewSize","setReviewSize","page","setPage","slider","reviews","setPaginator","action","Fragment","title","name","position","comment","page_two","setTitle","setName","monthIng","setMonthIng","employeeFT","setEmployeeFT","foodCost","setFoodCost","anualSaves","setAnualSaves","valuetext","value","calculator","split","slice","join","description","Slider","defaultValue","getAriaValueText","aria-labelledby","valueLabelDisplay","step","onChange","e","v","min","max","Container","exact","path","component","Testimonial","Configurator","from","App","Boolean","window","location","hostname","match","initState","reducer","element","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f5b4fd2f.chunk.js","sourcesContent":["import * as actionsTypes from \"./actions\";\r\nimport Axios from \"axios\";\r\n\r\nexport const onClickNavHandler = name => {\r\n  return {\r\n    type: actionsTypes.ON_CLICK_HANDLER,\r\n    linkName: name\r\n  };\r\n};\r\n\r\nexport const getNavItems = () => {\r\n  return dispatch => {\r\n    let jsonData = [];\r\n    Axios.get(\r\n      \"https://raw.githubusercontent.com/Bernabe-Felix/Bellotero/master/app.json\"\r\n    )\r\n      .then(res => {\r\n        if (res.status === 200 && res.data) {\r\n          jsonData = res.data.menu.items;\r\n          if (jsonData.length > 0) {\r\n            jsonData.forEach(val => {\r\n              val.active = false;\r\n            });\r\n            dispatch(setNavItems(jsonData));\r\n          }\r\n        }\r\n      })\r\n      .catch(error => {\r\n        dispatch(connectionFail());\r\n      });\r\n  };\r\n};\r\n\r\nexport const connectionFail = () => {\r\n  return {\r\n    type: actionsTypes.CONECTION_FAILED\r\n  };\r\n};\r\n\r\nexport const setNavItems = navItems => {\r\n  return {\r\n    type: actionsTypes.SET_NAV_ITEMS,\r\n    newItems: navItems\r\n  };\r\n};\r\n\r\nexport const setPageOne = pageContent => {\r\n  return {\r\n    type: actionsTypes.SET_PAGE_ONE_CONTENT,\r\n    pageContent: pageContent\r\n  };\r\n};\r\n\r\nexport const setPageTwo = pageContent => {\r\n  return {\r\n    type: actionsTypes.SET_PAGE_TWO_CONTENT,\r\n    pageContent: pageContent\r\n  };\r\n};\r\n\r\nexport const loadPageOne = () => {\r\n  return dispatch => {\r\n    let jsonData = [];\r\n    Axios.get(\r\n      \"https://raw.githubusercontent.com/Bernabe-Felix/Bellotero/master/page1.json\"\r\n    ).then(res => {\r\n        if (res.status === 200 && res.data) {\r\n          jsonData = res.data;\r\n          dispatch(setPageOne(jsonData));\r\n        }\r\n      })\r\n      .catch(error => {\r\n        dispatch(connectionFail());\r\n      });\r\n  };\r\n};\r\n\r\n\r\nexport const loadPageTwo = () => {\r\n  return dispatch => {\r\n    let jsonData = [];\r\n    Axios.get(\r\n      \"https://raw.githubusercontent.com/Bernabe-Felix/Bellotero/master/page2.json\"\r\n    ).then(res => {\r\n        if (res.status === 200 && res.data) {\r\n          jsonData = res.data;\r\n          dispatch(setPageTwo(jsonData));\r\n        }\r\n      })\r\n      .catch(error => {\r\n        dispatch(connectionFail());\r\n      });\r\n  };\r\n};\r\n","export const GET_NAV_ITEMS = \"GET_NAV_ITEMS\";\r\nexport const SET_NAV_ITEMS = \"SET_NAV_ITEMS\";\r\nexport const ON_CLICK_HANDLER = \"ON_CLICK_HANDLER\";\r\nexport const LOAD_PAGE_ONE = \"LOAD_PAGE_ONE\";\r\nexport const SET_PAGE_ONE_CONTENT = \"SET_PAGE_ONE_CONTENT\";\r\nexport const LOAD_PAGE_TWO = \"LOAD_PAGE_TWO\";\r\nexport const SET_PAGE_TWO_CONTENT = \"SET_PAGE_TWO_CONTENT\";\r\nexport const CONECTION_FAILED = \"CONECTION_FAILED\";\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./scss/_nav.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport * as belloteroActions from \"../../store/actions\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NavBar = props => {\r\n  const { navItems, setActiveNav, getNavItems } = props;\r\n  React.useEffect(() => {\r\n    getNavItems();\r\n  }, [getNavItems]);\r\n\r\n  return (\r\n    <header>\r\n      <nav className=\"navbar navbar-expand navbar-light fixed-top\">\r\n        <div className=\"container\">\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            <img src=\"assets/images/bellotero.svg\" alt=\"\" />\r\n          </a>\r\n          <ul className=\"navbar-nav\">\r\n            {navItems.map((nav, index) => (\r\n              <li\r\n                key={index}\r\n                className={nav.active ? \"nav-item active\" : \"nav-item\"}\r\n              >\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to={nav.route}\r\n                  onClick={() => setActiveNav(nav.text)}\r\n                >\r\n                  {nav.text}\r\n                </Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nNavBar.propTypes = { navItems: PropTypes.array.isRequired };\r\nconst mapStateToProps = state => {\r\n  return {\r\n    navItems: state.navItems,    \r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getNavItems: () => dispatch(belloteroActions.getNavItems()),\r\n    setActiveNav: text => dispatch(belloteroActions.onClickNavHandler(text))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(NavBar);\r\n","import React from \"react\";\r\n\r\nconst Hoc = props => <div className=\"hoc\">{props.children}</div>;\r\n\r\nexport default Hoc;\r\n","import React from \"react\";\r\n\r\nconst ErrorPage = () => {\r\n  return (\r\n    <main\r\n      style={{\r\n        display: \"block\",\r\n        textAlign: \"center\",\r\n        paddingTop: \"15%\",\r\n        fontSize: \"-webkit-xxx-large\",\r\n        fontWeight: \"bold\",\r\n        color: \"red\"\r\n      }}\r\n    >\r\n      ERROR LOADIND THE DATA\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default ErrorPage;\r\n","import React from \"react\";\r\nimport \"./_styles.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport * as belloteroActions from \"../../store/actions\";\r\nimport PropTypes from \"prop-types\";\r\nimport ErrorPage from \"../../errors/error\";\r\n\r\nconst Testimonial = props => {\r\n  const { pageData, error, getData } = props;\r\n  const [contentData, setContentData] = React.useState([]);\r\n  const [reviewSize, setReviewSize] = React.useState(0);\r\n  const [page, setPage] = React.useState(0);\r\n  React.useEffect(() => {\r\n    getData();\r\n  }, [getData]);\r\n\r\n  React.useEffect(() => {\r\n    if (pageData) {\r\n      setContentData(pageData.slider.reviews);\r\n    }\r\n  }, [pageData]);\r\n  React.useEffect(() => {\r\n    setReviewSize(contentData.length);\r\n  }, [contentData]);\r\n\r\n  const setPaginator = action => {\r\n    switch (action) {\r\n      case \"next\":\r\n        if (page+1<contentData.length) {\r\n          setPage(page + 1);\r\n        }\r\n        break;\r\n\r\n      default:\r\n        if (page!== 0) {\r\n          setPage(page - 1);\r\n        }\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {error ? (\r\n        <ErrorPage />\r\n      ) : (\r\n        <main className=\"container\">\r\n          <div>\r\n            <label className=\"title_label\">\r\n              <h1>{pageData && pageData.slider.title}</h1>\r\n            </label>\r\n          </div>\r\n          {contentData.length > 0 && (\r\n            <div className=\"customer_card\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-4 left-area\">\r\n                  <h3>{contentData[page].name}</h3>\r\n                  <label>{contentData[page].position}</label>\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                  <p>{contentData[page].comment}</p>\r\n                  <div className=\"pag\">\r\n                    {page + 1}/{reviewSize}\r\n                  </div>\r\n                  <button className=\"pag_back\" onClick={()=>setPaginator(\"back\")}>{\"<\"}</button>\r\n                  <button className=\"pag_next\" onClick={()=>setPaginator(\"next\")}>{\">\"}</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </main>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    pageData: state.page_one,\r\n    error: state.error\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getData: () => dispatch(belloteroActions.loadPageOne())\r\n  };\r\n};\r\nTestimonial.propTypes = {\r\n  pageData: PropTypes.any,\r\n  error: PropTypes.bool,\r\n  getData: PropTypes.func\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Testimonial);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport * as belloteroActions from \"../../store/actions\";\r\nimport ErrorPage from \"../../errors/error\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\n\r\nimport \"./_styles.scss\";\r\n\r\n\r\n\r\nconst Configurator = props => {\r\n\r\n  const { pageData, error, getData } = props;\r\n  const [title, setTitle] = React.useState(\"\");\r\n  const [name, setName] = React.useState(\"\");\r\n  const [monthIng, setMonthIng] = React.useState(10);\r\n  const [employeeFT, setEmployeeFT] = React.useState(1);\r\n  const [foodCost, setFoodCost] = React.useState(0);\r\n  const [anualSaves, setAnualSaves] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    getData();\r\n  }, [getData]);\r\n\r\n  React.useEffect(() => {\r\n    setFoodCost(monthIng * 0.3);\r\n  }, [monthIng]);\r\n\r\n  React.useEffect(() => {\r\n    setAnualSaves(employeeFT * 1337 + foodCost);\r\n  }, [employeeFT, foodCost]);\r\n\r\n  React.useEffect(() => {\r\n    if (pageData) {\r\n      pageData.calculator.title.split(\" \").slice(0, 3);\r\n\r\n      setTitle(\r\n        pageData.calculator.title\r\n          .split(\" \")\r\n          .slice(0, 3)\r\n          .join(\" \")\r\n      );\r\n      setName(pageData.calculator.title.split(\" \").slice(3, 4));\r\n    }\r\n  }, [pageData]);\r\n\r\n  function valuetext(value) {\r\n    return `${value}`;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {error ? (\r\n        <ErrorPage />\r\n      ) : (\r\n        <main className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-5\">\r\n              <label className=\"title_label_con\">\r\n                <h1>{title}</h1>\r\n              </label>\r\n              <br />\r\n              <label className=\"name_label_con\">\r\n                <h1>{name}</h1>\r\n              </label>\r\n              <p className=\"p_con\">\r\n                {pageData && pageData.calculator.description}\r\n              </p>\r\n            </div>\r\n            <div className=\"col-md-7\">\r\n              <div className=\"panel_right\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n                    <label>Monthly ingredient spending</label>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"field\">\r\n                      <span>$</span> <label>{monthIng}</label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                    <Slider\r\n                      defaultValue={10}\r\n                      getAriaValueText={valuetext}\r\n                      aria-labelledby=\"discrete-slider\"\r\n                      valueLabelDisplay=\"auto\"\r\n                      step={10}\r\n                      onChange={(e, v) => {\r\n                        setMonthIng(v);\r\n                      }}\r\n                      min={10}\r\n                      max={100}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n                    <label>Full-time employees that process invoices</label>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"field2\">\r\n                      <span>{employeeFT}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                    <Slider\r\n                      defaultValue={1}\r\n                      getAriaValueText={valuetext}\r\n                      aria-labelledby=\"discrete-slider\"\r\n                      valueLabelDisplay=\"auto\"\r\n                      step={1}\r\n                      onChange={(e, v) => {\r\n                        setEmployeeFT(v);\r\n                      }}\r\n                      min={1}\r\n                      max={10}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n                    <label className=\"result\">\r\n                      $ <span>{foodCost}</span>\r\n                    </label>\r\n                    <br/>\r\n                    <span className=\"sub_result\">\r\n                      Estimated cost food savings\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                  <label className=\"result\">\r\n                      $ <span>{anualSaves}</span>\r\n                    </label>\r\n                    <br/>\r\n                    <span className=\"sub_result\">\r\n                    Your estimated annual savings\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    pageData: state.page_two,\r\n    error: state.error\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getData: () => dispatch(belloteroActions.loadPageTwo())\r\n  };\r\n};\r\nConfigurator.propTypes = {\r\n  pageData: PropTypes.any,\r\n  error: PropTypes.bool,\r\n  getData: PropTypes.func\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Configurator);\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Testimonial from \"../views/Testimonial/view.testimonial\";\r\nimport Configurator from \"../views/Configurator/view.configurator\";\r\n\r\nexport default function Container() {\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route exact path=\"/\" name=\"Testimonial\" component={Testimonial} />\r\n        <Route\r\n          exact\r\n          path=\"/page-1\"\r\n          name=\"Testimonial\"\r\n          component={Testimonial}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/page-2\"\r\n          name=\"Configurator\"\r\n          component={Configurator}\r\n        />\r\n        <Redirect from=\"**\" to=\"/\" />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./App.scss\";\r\nimport NavBar from \"./components/navbar/componet.nav\";\r\nimport Hoc from \"./components/Hoc/hoc\";\r\nimport Container from \"./containers/Container\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Hoc>\r\n      <NavBar />\r\n      <Container />\r\n    </Hoc>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as actionsTypes from \"../actions/actions\";\r\n\r\nconst initState = {\r\n  navItems: [],\r\n  page_one: null,\r\n  page_two: null,\r\n  error: false\r\n};\r\n\r\nconst reducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case actionsTypes.GET_NAV_ITEMS:\r\n      return state;\r\n    case actionsTypes.LOAD_PAGE_ONE:\r\n      return state;\r\n    case actionsTypes.LOAD_PAGE_TWO:\r\n      return state;\r\n    case actionsTypes.ON_CLICK_HANDLER:\r\n      let data = state.navItems;\r\n      data.forEach(element => {\r\n        if (element.text === action.linkName) {\r\n          element.active = true;\r\n        } else {\r\n          element.active = false;\r\n        }\r\n      });\r\n      return { ...state, navItems: [...data] };\r\n    case actionsTypes.SET_NAV_ITEMS:\r\n      return {\r\n        ...state,\r\n        navItems: action.newItems,\r\n        error: false\r\n      };\r\n    case actionsTypes.SET_PAGE_ONE_CONTENT:\r\n      return {\r\n        ...state,\r\n        page_one: action.pageContent,\r\n        page_two: null,\r\n        error: false\r\n      };\r\n      case actionsTypes.SET_PAGE_TWO_CONTENT:\r\n          return {\r\n            ...state,\r\n            page_one: null,\r\n            page_two: action.pageContent,\r\n            error: false\r\n          };\r\n    case actionsTypes.CONECTION_FAILED:\r\n      return {\r\n        ...state,\r\n        error: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default reducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\n\r\nimport reducer from \"./store/reducer/reducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}